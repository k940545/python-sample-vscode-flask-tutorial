# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

stages:
- stage: Test
  jobs:
  - job: Test
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo Test!
    # - task: ArchiveFiles@2
    #   inputs:
    #     rootFolderOrFile: '$(Build.SourcesDirectory)'
    #     includeRootFolder: false
    #     archiveType: 'zip'
    #     archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    #     replaceExistingArchive: true
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'tar'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).tgz'
        replaceExistingArchive: true
        verbose: true
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).tgz
      displayName: 'Upload package'
      artifact: artifacts
    - script: |
        echo hi
        ls -l
        pwd
        hostname -i
        uname -r

- stage: Deploy
  jobs:
  - deployment: Deploy
    environment: 
      name: 'el1k-taichung'
      resourceType: VirtualMachine
      tags: 'test'
    strategy:
      runOnce:
        deploy:
          steps:
            - script: |
                echo $(Build.ArtifactStagingDirectory)
                echo $(Pipeline.Workspace)
              displayName: 'echo var'
            - task: ExtractFiles@1
              inputs:
                archiveFilePatterns: '$(Pipeline.Workspace)/artifacts/$(Build.BuildId).tgz'
                destinationFolder: '$(Pipeline.Workspace)'
                cleanDestinationFolder: false
            - script: |
                echo hi
                ls -l
                pwd
                hostname -i
                uname -r
            
            # - task: AzureWebApp@1
            #   inputs:
            #     azureSubscription: 'eyelan'
            #     appType: 'webAppLinux'
            #     appName: 'flask_test'
            #     package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
            #     startUpCommand: '''gunicorn --bind=0.0.0.0 --workers=4 startup:app'''

# pool:
#   vmImage: 'ubuntu-latest'
# strategy:
#   matrix:
#     Python27:
#       python.version: '2.7'
#     # Python35:
#     #   python.version: '3.5'
#     # Python36:
#     #   python.version: '3.6'
#     # Python37:
#     #   python.version: '3.7'
# # container:
# #   image: eylregistry.azurecr.io/sphinx-pdf:latest
# #   endpoint: eylregistry  

# steps:
# - task: UsePythonVersion@0
#   inputs:
#     versionSpec: '$(python.version)'
#   displayName: 'Use Python $(python.version)'

# - script: |
#     python -m pip install --upgrade pip
#     pip install -r requirements.txt
#   displayName: 'Install dependencies'

# # - script: |
# #     pip install pytest pytest-azurepipelines
# #     pytest
# #   displayName: 'pytest'

# - script: |
#     flake8 --ignore=C901,E113,E128,E116,E402,E711,E731,E401,E501,W503,W293,W391,F401,E722 .
#   displayName: 'flake8'

# # - script: hostname -i
# #   target: eylregistry.azurecr.io/sphinx-pdf:latest